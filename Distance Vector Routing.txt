#include <stdio.h>

struct node {
    int dist[10];    // Distance to other nodes
    int from[10];    // From which node the packet will come
} rt[10];

int main() {
    int costmat[10][10];
    int nodes, i, j, k, count = 0;

    printf("Enter the number of nodes: ");
    scanf("%d", &nodes);

    printf("Enter the cost matrix (999 for infinity):\n");
    for (i = 0; i < nodes; i++) {
        for (j = 0; j < nodes; j++) {
            scanf("%d", &costmat[i][j]);
            costmat[i][i] = 0;
            rt[i].dist[j] = costmat[i][j];
            rt[i].from[j] = j;
        }
    }

    do {
        count = 0;
        for (i = 0; i < nodes; i++) {
            for (j = 0; j < nodes; j++) {
                for (k = 0; k < nodes; k++) {
                    if (rt[i].dist[j] > costmat[i][k] + rt[k].dist[j]) {
                        rt[i].dist[j] = costmat[i][k] + rt[k].dist[j];
                        rt[i].from[j] = k;
                        count++;
                    }
                }
            }
        }
    } while (count != 0);

    printf("\nFinal Routing Tables:\n");
    for (i = 0; i < nodes; i++) {
        printf("\nRouter %d Table:\n", i + 1);
        printf("Destination\tNext Hop\tDistance\n");
        for (j = 0; j < nodes; j++) {
            printf("%d\t\t%d\t\t%d\n", j + 1, rt[i].from[j] + 1, rt[i].dist[j]);
        }
    }

    return 0;
}




output:


Enter the number of nodes: 3
Enter the cost matrix (999 for infinity):
0 2 7
2 0 1
7 1 0

Final Routing Tables:

Router 1 Table:
Destination   Next Hop   Distance
1             1          0
2             2          2
3             2          3

Router 2 Table:
Destination   Next Hop   Distance
1             1          2
2             2          0
3             3          1

Router 3 Table:
Destination   Next Hop   Distance
1             2          3
2             2          1
3             3          0




